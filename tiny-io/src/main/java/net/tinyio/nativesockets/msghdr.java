// Generated by jextract

package net.tinyio.nativesockets;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct msghdr {
 *     void* msg_name;
 *     socklen_t msg_namelen;
 *     struct iovec* msg_iov;
 *     size_t msg_iovlen;
 *     void* msg_control;
 *     size_t msg_controllen;
 *     int msg_flags;
 * };
 * }
 */
public class msghdr {

    public static MemoryLayout $LAYOUT() {
        return constants$0.const$2;
    }
    public static VarHandle msg_name$VH() {
        return constants$0.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* msg_name;
     * }
     */
    public static MemorySegment msg_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$0.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* msg_name;
     * }
     */
    public static void msg_name$set(MemorySegment seg, MemorySegment x) {
        constants$0.const$3.set(seg, x);
    }
    public static MemorySegment msg_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$0.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void msg_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$0.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle msg_namelen$VH() {
        return constants$0.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * socklen_t msg_namelen;
     * }
     */
    public static int msg_namelen$get(MemorySegment seg) {
        return (int)constants$0.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * socklen_t msg_namelen;
     * }
     */
    public static void msg_namelen$set(MemorySegment seg, int x) {
        constants$0.const$4.set(seg, x);
    }
    public static int msg_namelen$get(MemorySegment seg, long index) {
        return (int)constants$0.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void msg_namelen$set(MemorySegment seg, long index, int x) {
        constants$0.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle msg_iov$VH() {
        return constants$0.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct iovec* msg_iov;
     * }
     */
    public static MemorySegment msg_iov$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$0.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct iovec* msg_iov;
     * }
     */
    public static void msg_iov$set(MemorySegment seg, MemorySegment x) {
        constants$0.const$5.set(seg, x);
    }
    public static MemorySegment msg_iov$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$0.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void msg_iov$set(MemorySegment seg, long index, MemorySegment x) {
        constants$0.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle msg_iovlen$VH() {
        return constants$1.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * size_t msg_iovlen;
     * }
     */
    public static long msg_iovlen$get(MemorySegment seg) {
        return (long)constants$1.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * size_t msg_iovlen;
     * }
     */
    public static void msg_iovlen$set(MemorySegment seg, long x) {
        constants$1.const$0.set(seg, x);
    }
    public static long msg_iovlen$get(MemorySegment seg, long index) {
        return (long)constants$1.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void msg_iovlen$set(MemorySegment seg, long index, long x) {
        constants$1.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle msg_control$VH() {
        return constants$1.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* msg_control;
     * }
     */
    public static MemorySegment msg_control$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* msg_control;
     * }
     */
    public static void msg_control$set(MemorySegment seg, MemorySegment x) {
        constants$1.const$1.set(seg, x);
    }
    public static MemorySegment msg_control$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void msg_control$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle msg_controllen$VH() {
        return constants$1.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * size_t msg_controllen;
     * }
     */
    public static long msg_controllen$get(MemorySegment seg) {
        return (long)constants$1.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * size_t msg_controllen;
     * }
     */
    public static void msg_controllen$set(MemorySegment seg, long x) {
        constants$1.const$2.set(seg, x);
    }
    public static long msg_controllen$get(MemorySegment seg, long index) {
        return (long)constants$1.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void msg_controllen$set(MemorySegment seg, long index, long x) {
        constants$1.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle msg_flags$VH() {
        return constants$1.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int msg_flags;
     * }
     */
    public static int msg_flags$get(MemorySegment seg) {
        return (int)constants$1.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int msg_flags;
     * }
     */
    public static void msg_flags$set(MemorySegment seg, int x) {
        constants$1.const$3.set(seg, x);
    }
    public static int msg_flags$get(MemorySegment seg, long index) {
        return (int)constants$1.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void msg_flags$set(MemorySegment seg, long index, int x) {
        constants$1.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


